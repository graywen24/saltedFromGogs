# -*- mode: shell-script -*-
#
# Control a system via Cisco UCS Manager XML API.

# Exit with failure message.
# Parameters: exit code, and error message.
fail() {
    echo "$2" >&2
    exit $1
}

issue_ucsm_command() {
python - << END
import sys
from provisioningserver.drivers.hardware.ucsm import power_control_ucsm
try:
    power_control_ucsm(
        {{escape_py_literal(power_address) | safe}},
        {{escape_py_literal(power_user) | safe}},
        {{escape_py_literal(power_pass) | safe}},
        {{escape_py_literal(uuid) | safe}},
        {{escape_py_literal(power_change) | safe}},
    )
except Exception as e:
    # This gets in the node event log: print the exception's message
    # and not the stacktrace.
    print(unicode(e))
    sys.exit(1)
END
}

query_state() {
python - << END
import sys
from provisioningserver.drivers.hardware.ucsm import power_state_ucsm
try:
    print(power_state_ucsm(
        {{escape_py_literal(power_address) | safe}},
        {{escape_py_literal(power_user) | safe}},
        {{escape_py_literal(power_pass) | safe}},
        {{escape_py_literal(uuid) | safe}},
    ))
except Exception as e:
    # This gets in the node event log: print the exception's message
    # and not the stacktrace.
    print(unicode(e))
    sys.exit(1)
END
}

main() {
    case $1 in
    'on'|'off')
        issue_ucsm_command
        ;;
    'query')
        query_state
        ;;
    *)
        fail 2 "Unknown power command: '$1'"
    esac
}

main "{{power_change}}"
