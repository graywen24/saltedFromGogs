#!/bin/sh
# -*- mode: shell-script -*-
#
# Control a system via American Power Conversion (APC) PDU.

# Exit with failure message.
# Parameters: exit code, and error message.
fail() {
    echo "$2" >&2
    exit $1
}

issue_apc_command() {
python - << 'END'
import sys
from provisioningserver.drivers.hardware.apc import power_control_apc
try:
    power_control_apc(
        {{escape_py_literal(power_address) | safe}},
        {{escape_py_literal(node_outlet) | safe}},
        {{escape_py_literal(power_change) | safe}},
        {{escape_py_literal(power_on_delay) | safe}},
    )
except Exception as e:
    # This gets in the node event log: print the exception's message
    # and not the stacktrace.
    print(unicode(e))
    sys.exit(1)
END
}

query_state() {
python - << 'END'
import sys
from provisioningserver.drivers.hardware.apc import power_state_apc
try:
    print(power_state_apc(
        {{escape_py_literal(power_address) | safe}},
        {{escape_py_literal(node_outlet) | safe}},
    ))
except Exception as e:
    # This gets in the node event log: print the exception's message
    # and not the stacktrace.
    print(unicode(e))
    sys.exit(1)
END
}

main() {
    case $1 in
    'on'|'off')
        issue_apc_command
        ;;
    'query')
        query_state
        ;;
    *)
        fail 2 "Unknown power command: '$1'"
    esac
}

main "{{power_change}}"
