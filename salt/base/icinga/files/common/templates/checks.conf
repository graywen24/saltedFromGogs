
object CheckCommand "tummy" {
        import "plugin-check-command"

        command = [
                "{{ pillar.monitor.plugindir }}/check_tummy.sh",
                "$tummy_state$",
                "$tummy_text$"
        ]

        vars.tummy_state = 3
        vars.tummy_text = "Missing recent check results."

}

object CheckCommand "outdated" {
    import "plugin-check-command"
    command = [ "{{ pillar.monitor.plugindir }}/check_outdated.py" ]

    arguments = {
                "-H" = "$dbhost$"
                "-d" = "$dbname$"
                "-u" = "$dbuser$"
                "-p" = "$dbpass$"
                "-f" = "$buffer$"
        }
    vars.dbhost = "localhost"
    vars.buffer = 60
}

object CheckCommand "process" {
        import "plugin-check-command"

        command = [ "{{ pillar.monitor.plugindir }}/check_process.sh" ]

        arguments = {
                "-p" = {
                        value = "$cmd$"
                        description = "The process name to look for"
                }
                "-c" = {
                        value = "$cpu_warn$"
                        description = "The warning to use for the CPU percentage used"
                }
                "-C" = {
                        value = "$cpu_crit$"
                        description = "The critical to use for the CPU percentage used"
                }
                "-m" = {
                        value = "$mem_warn$"
                        description = "The warning to use for the Memory percentage used"
                }
                "-M" = {
                        value = "$mem_crit$"
                        description = "The critical to use for the Memory percentage used"
                }
                "-n" = {
                        value = "$cnt_warn$"
                        description = "The warning to use for the number of processes"
                }
                "-N" = {
                        value = "$cnt_crit$"
                        description = "The critical to use for the number of processes"
                }
                "-z" = {
                        set_if = "$missing_crit$"
                        description = "Return critical state if process is missing"
                }

        }

        vars.cpu_warn = 75
        vars.cpu_crit = 90
        vars.mem_warn = 50
        vars.mem_crit = 75
        vars.cnt_warn = 25
        vars.cnt_crit = 50
        vars.missing_crit = true

}


object CheckCommand "cpu" {
        import "plugin-check-command"

        command = [ "{{ pillar.monitor.plugindir }}/check_cpu.sh" ]

        arguments = {
                "-w" = {
                        value = "$warn$"
                        description = "Master warning level for cpu usage"
                }
                "-uw" = {
                        value = "$warn_user$"
                        description = "Warning level for user cpu"
                }
                "-iw" = {
                        value = "$warn_wait$"
                        description = "Warning level for io wait cpu"
                }
                "-sw" = {
                        value = "$warn_sys$"
                        description = "Warning level for system cpu"
                }
                "-c" = {
                        value = "$crit$"
                        description = "Master critical level for cpu usage"
                }
                "-uc" = {
                        value = "$crit_user$"
                        description = "Critical level for user cpu"
                }
                "-ic" = {
                        value = "$crit_wait$"
                        description = "Critical level for io wait cpu"
                }
                "-sc" = {
                        value = "$crit_sys$"
                        description = "Critical level for system cpu"
                }
                "-i" = {
                        value = "$interval$"
                        description = "Repeat interval in seconds"
                }
                "-n" = {
                        value = "$repeat$"
                        description = "Number of repeats for io stats measurement"
                }

        }

        vars.interval = 1
        vars.repeat = 3

}


object CheckCommand "mem" {
        import "plugin-check-command"

        command = [ "{{ pillar.monitor.plugindir }}/check_mem.sh" ]

        arguments = {
                "-w" = {
                        value = "$warn$"
                        description = "Warn level in percent"
                }
                "-c" = {
                        value = "$crit$"
                        description = "Critical level in percent"
                }

        }

        vars.warn = 75
        vars.crit = 85

}


